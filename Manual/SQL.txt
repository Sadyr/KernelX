Создание таблицы book
CREATE TABLE book(
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author VARCHAR(30),
    price DECIMAL(8,2),
    amount INT);

Создание таблицы genre
CREATE TABLE genre(
	genre_id INT PRIMARY KEY AUTO_INCREMENT,
	name_genre VARCHAR(30);

Вставить данные в таблицу genre
INSERT INTO genre (name_genre)
VALUES ('Роман'); ;

Выбоор всех данных из таблицы genre
SELECT * FROM genre;

Вставка данных в таюлицу book
INSERT INTO book(
	title, author,price,amount)
VALUES ('Мастер и Маргарита', 'Булгаков М.А','970.99','3');

SELECT author, title, price
FROM book;

Выборка отдельных столбцов и присвоение им имен
SELECT  title AS Название,
author AS Автор
FROM book;

Выборка данных с созданием вычисляемого столбца
SELECT title, author, price, amount,
price * amount AS total
FROM book;

Выборка данных, вычисляемые столбцы, математические функции
SELECT title,
author,
amount,
ROUND(price-(price*30/100),2) AS new_price
FROM book;

ROUND(x, k)	округляет значение x до k знаков после запятой,
если k не указано – x округляется до целого	ROUND(4.361)=4
ROUND(5.86592,1)=5.9

Выборка данных, вычисляемые столбцы, логические функции
SELECT title, amount, price,
ROUND(IF(amount<4, price*0.5, price*0.7)) AS sale
FROM book;

SELECT title, amount, price,
ROUND(IF(amount < 4, price *0.5, iF(amount < 11, price*0.7, price * 0.9)),2) AS sale,
IF(amount < 4, 'скидка 50%', IF (amount < 11, 'скидка 30%', 'скидка 10%')) AS Ваша_скидка

SELECT author,title,
ROUND(IF(author = "Булгаков М.А.", price * 1.1, IF(author = "Есенин С.А.", price * 1.05,price)),2) AS new_price
FROM book;

Вывести название и цену тех книг, цены которых меньше 600 рублей.
SELECT title, price
FROM book
WHERE price < 600;


Вывести название, автора  и стоимость (цена умножить на количество) тех книг, 
стоимость которых больше 4000 рублей
SELECT title, author, price * amount AS total
FROM book
WHERE price * amount > 4000;

Вывести автора, название  и цены тех книг, количество которых меньше 10.
SELECT author, title, price
FROM book
WHERE amount < 10;


Логическое выражение после ключевого слова WHERE кроме операторов 
сравнения  и выражений может включать  логические операции (И «and», ИЛИ «or», НЕ «not») 
и круглые скобки, изменяющие приоритеты выполнения операций.
Приоритеты операций:
круглые скобки
умножение  (*),  деление (/)
сложение  (+), вычитание (-)
операторы сравнения (=, >, <, >=, <=, <>)
NOT
AND
OR


Вывести название, автора и цену тех книг, которые написал Булгаков, ценой больше 600 рублей
SELECT title , author, price
FROM book
WHERE price > 600 AND author= 'Булгаков М.А.';

Вывести название, цену  тех книг, которые написал Булгаков или Есенин, ценой больше 600 рублей
SELECT title, author, price
FROM book
WHERE (author = 'Булгаков М.А.' OR author = 'Есенин С.А.') AND price >600;


Вывести название, автора,  цену  и количество всех книг, цена которых меньше 
500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
SELECT title, author, price, amount
FROM book
WHERE  (amount * price) >= 5000 AND (price < 500 or price > 600);

Выборка данных, операторы BETWEEN, IN
Логическое выражение после ключевого слова WHERE может включать операторы 
BETWEEN и IN. Приоритет  у этих операторов такой же как у операторов 
сравнения, то есть они выполняются раньше, чем NOT, AND, OR.
Оператор BETWEEN позволяет отобрать данные, относящиеся к некоторому интервалу, 
включая его границы.

Выбрать названия и количества тех книг, количество которых от 5 до 14 включительно.
SELECT title, amount
FROM book 
WHERE amount BETWEEN 5 AND 14;

SELECT title, amount
FROM book
WHERE amount >=5 AND amount <=14;

Оператор  IN  позволяет выбрать данные, соответствующие значениям из списка.
Выбрать названия и цены книг, написанных Булгаковым или Достоевским.
SELECT title, price
FROM book
WHERE author IN ('Булгаков М.А.', 'Достоевский Ф.М.');

SELECT title, price
FROM book
WHERE author = 'Булгаков М.А.' OR author='Достоевский Ф.М.';

Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 
(включая границы),  а количество или 2, или 3, или 5, или 7
SELECT title, author, price
FROM book
WHERE price BETWEEN(540.50 AND 800) AND ((amount=2 or amount=3)(amount=5 or amount=7));

Выборка данных с сортировкой
При выборке можно указывать столбец или несколько столбцов, по которым необходимо отсортировать отобранные строки. Для этого используются ключевые слова ORDER BY, после которых задаются имена столбцов. При этом строки сортируются по первому столбцу, если указан второй столбец, сортировка осуществляется только для тех строк, у которых значения первого столбца одинаковы. По умолчанию ORDER BY выполняет сортировку по возрастанию. Чтобы управлять направлением сортировки вручную, 
после имени столбца указывается ключевое слово ASC (по возрастанию) или DESC (по убыванию). 
Логический порядок операций для запроса SQL следующий:

FROM
WHERE
SELECT
ORDER BY
Поскольку сортировка выполняется позже SELECT, для указания столбцов, по которым выполняется сортировка, можно использовать имена, присвоенные им после SELECT, а также порядковый номер столбца в перечислении.

Вывести название, автора и цены книг. 
Информацию  отсортировать по названиям книг в алфавитном порядке.
SELECT title, author, price
FROM book
ORDER BY title;


Вывести автора, название и количество книг, в отсортированном в алфавитном порядке по автору и по убыванию 
количества, для тех книг, цены которых меньше 750 рублей.
SELECT author, title, amount AS Количество
FROM book
WHERE price < 750
ORDER BY author, amount DESC;


Вывести  автора и название  книг, количество которых принадлежит интервалу 
от 2 до 14 (включая границы). Информацию  отсортировать сначала по авторам (в обратном
 алфавитном порядке), а затем по названиям книг (по алфавиту).
SELECT author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC , title;

Вывести названия книг, начинающихся с буквы «Б».
SELECT title
FROM book
WHERE title LIKE 'Б%';

Вывести название книг, состоящих ровно из 5 букв.
SELECT title FROM book
WHERE title LIKE '_____';

Вывести книги, название которых длиннее 5 символов:
SELECT title FROM book 
WHERE title LIKE "_____%";

Вывести названия книг, которые содержат букву "и" как отдельное слово, если считать, что слова в названии отделяются друг от друга пробелами и не содержат знаков препинания.
SELECT title FROM book
WHERE title LIKE "_% и _%"
OR title LIKE "и _%"
OR title LIKE "_% и"
OR title LIKE "и";

Вывести названия книг, которые состоят ровно из одного слова, если считать, что слова в названии отделяются друг от друга пробелами .
SELECT title FROM book
WHERE title NOT LIKE "% %";

Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
Информацию отсортировать по названию книги в алфавитном порядке.
SELECT title, author
FROM book
WHERE title LIKE "_% _%" AND (author LIKE '_% С.%'
OR author LIKE '_% _.С.')
ORDER BY title;

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;

INSERT INTO book (title, author, price, amount) VALUES ('Черный человек','Есенин С.А.', Null, Null);

SELECT author, COUNT(author), COUNT(amount), COUNT(*)
FROM book
GROUP BY author;

SELECT author AS Автор, count(title) AS Различных_книг, sum(amount) AS Количество_экземпляров
FROM book
GROUP BY author;
При группировке над элементами столбца, входящими в группу можно выполнить различные действия, например, просуммировать их или найти количество элементов в группе.

Подробно рассмотрим, как осуществляется группировка данных по некоторому столбцу и вычисления над группой на следующем примере:

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;

К групповым функциям SQL относятся: MIN(), MAX() и AVG(), которые вычисляют минимальное, максимальное и среднее 
значение элементов столбца, относящихся к группе.
SELECT author, MIN(price) AS min_price
FROM book
GROUP BY author;

SELECT author, MIN(price) AS Минимальная_цена,MAX(price) AS Максимальная_цена,AVG(price) AS Средняя_цена
FROM book
GROUP BY author;

В качестве аргумента групповых функций  SQL может использоваться не только столбец,
 но и любое допустимое в SQL арифметическое выражение.
SELECT author, SUM(price*amount) AS Стоимость
FROM book
GROUP BY author;

Найти среднюю цену книг каждого автора.
SELECT author, ROUND(AVG(price),2) AS Средняя_цена
FROM book
GROUP BY author;
Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. Значения округлить до двух знаков после запятой. В запросе для расчета НДС(tax)  и 
Стоимости без НДС(S_without_tax) использовать следующие формулы:
SELECT author, ROUND(SUM(price*amount),2) AS Стоимость, 
ROUND((SUM(price*amount)*18)/100,2) AS НДС, 
ROUND((SUM(price*amount)-((SUM(price*amount)*18)/100),2) AS Стоимость_без_НДС
FROM book
GROUP BY author;

SELECT author, ROUND(SUM(price*amount),2) AS Стоимость, 
ROUND(((SUM(price*amount)*18)/100)/(1+18/100),2) AS НДС, 
ROUND((SUM(price*amount))-(((SUM(price*amount)*18)/100)/(1+(18/100))),2) AS Стоимость_без_НДС
FROM book
GROUP BY author;

Посчитать количество экземпляров книг на складе.
SELECT SUM(amount) AS Количество
FROM book;

Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену книг на складе. Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена 
соответственно. Среднюю цену округлить до двух знаков после запятой.
SELECT MIN(price) AS Минимальная_цена,
MAX(price) AS Максимальная_цена,
ROUND(AVG(price),2) AS Средняя_цена
FROM book;

Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг которых больше 5000.

SELECT author,
	MAX(price) AS Минимальная_цена,
	MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price * amount) > 5000;

Найти минимальную и максимальную цену книг всех авторов, общая стоимость книг 
которых больше 5000. Результат вывести по убыванию минимальной цены.

SELECT author,
MAX(price) AS Минимальная_цена,
MAX(price) AS Максимальная_цена
FROM book
GROUP BY author
HAVING SUM(price*amount) > 5000
ORDER BY Минимальная_цена DESC;

Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. Столбцы назвать Средняя_цена 
и Стоимость, значения округлить до 2-х знаков после запятой.

SELECT AVG(price) AS Средняя_цена,
SUM(amount*price) AS Стоимость
FROM book 
WHERE amount BETWEEN 5 and 14;

FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY
Вывести максимальную и минимальную цену книг каждого автора, кроме Есенина, количество экземпляров книг которого больше 10. 
SELECT author,
	MIN(price) AS Минимальная_цена,
	MAX(price) AS Максимальная_цена
FROM book
WHERE author <> 'Есенин С.А.'
GROUP BY author
HAVING SUM(amount) > 10;


Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». В результат включить только тех авторов, у которых суммарная стоимость книг более 5000 руб. Вычисляемый столбец 
назвать Стоимость. Результат отсортировать по убыванию стоимости.

SELECT author,
    SUM(amount*price) AS Стоимость
WHERE title <> «Идиот» AND title <> "Белая гвардия"
GROUP BY author
HAVING SUM(amount*price) > 5000
ORDER BY price DESC;
Вложенные запросы
Вывести информацию о самых дешевых книгах, хранящихся на складе.

Для реализации этого запроса нам необходимо получить минимальную цену из столбца price таблицы book, а затем вывести информацию о тех книгах, цена которых  равна минимальной.
 Первая часть  – поиск  минимума – реализуется вложенным запросом.
SELECT title, author, price, amount
FROM book
WHERE price = (
SELECT MIN(price)
FROM book);
Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. Информацию вывести в отсортированном
 по убыванию цены виде. Среднее вычислить как среднее по цене книги
SELECT author, title, price
FROM book
WHERE  price<(
SELECT AVG(price)
FROM book)
ORDER BY price DESC;

Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3. То есть нужно вывести и те книги, количество 
экземпляров которых меньше среднего на 3, и больше среднего на 3.
SELECT title, author, amount
FROM book
WHERE ABS(amount - (SELECT AVG(amount) FROM book)) > 3;

Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не 
более чем на 150 рублей в отсортированном по возрастанию цены виде.
SELECT author, title, price
FROM book
WHERE ABS(price-(SELECT MIN(price) FROM book) <= 150)
ORDER BY price 

Вывести информацию о книгах тех авторов, общее количество экземпляров книг которых не менее 12.
SELECT title, author, amount, price
FROM book
WHERE author IN (
    SELECT author
    FROM book
    GROUP BY author
    HAVING SUM(amount) > = 12);
Вывести информацию (автора, книгу и количество) о тех книгах, 
количество экземпляров которых в таблице book не дублируе
SELECT author, title, amount
FROM book
WHERE  amount IN (
SELECT amount
FROM book
GROUP BY amount
HAVING COUNT(amount)=1);
Вывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.
SELECT title, author, amount, price
FROM book
WHERE amount < ALL (
    SELECT AVG(amount)
    FROM book
    GROUP BY author
);

Вывести информацию о тех книгах, количество которых меньше 
самого большого среднего количества книг каждого автора.
SELECT title, author, amount, price
FROM book
WHERE amount < ANY (
    SELECT AVG(amount)
    FROM book
    GROUP BY author);
Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой
 из минимальных цен, вычисленных для каждого автора.
SELECT author,title, price
FROM book
WHERE price < ANY (
    SELECT MIN(price)
    FROM book
    GROUP BY author);
Вывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3,
  а также указать среднее значение количества экземпляров книг.
SELECT title, author, amount,
    (SELECT AVG(amount)
    FROM book
    ) AS Среднее_количество 
FROM book
WHERE ABS(amount-(SELECT AVG(amount)FROM book)) > 3;

Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых 
экземпляров книг. Последнему столбцу присвоить имя Заказ.
SELECT title, author, amount,
    ((SELECT MAX(amount)
    FROM book) - amount) AS Заказ
FROM book
WHERE ABS((SELECT MAX(amount) FROM book)-amount) <> 0 ;

Добавление записей в таблицу
Например, чтобы добавить в таблицу book две новые записи используется запрос:

INSERT INTO book( title, author, price, amount)
VALUES 
('Война и мир','Толстой Л.Н.', 1070.20, 2),
('Анна Каренина', 'Толстой Л.Н.', 599.90, 3);
Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица:

Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица:
INSERT INTO supply( title, author, price, amount)
VALUES 
('Лирика','Пастернак Б.Л.', 518.99, 2),
('Черный человек','Есенин С.А.', 570.20, 6),
('Белая гвардия','Булгаков М.А.', 540.50, 7), 
('Идиот', 'Достоевский Ф.М.', 	360.80, 3);
Занести все книги из таблицы supply в таблицу book.
INSERT INTO book(title, author, price, amount)
SELECT title, author, price, amount
FROM supply;
SELECT * FROM supply

Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.

INSERT INTO book(title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE  author <> 'Булгаков М.А.' and author <> 'Достоевский Ф.М.' ;
SELECT * FROM book;
Занести из таблицы supply в таблицу book только те книги, названия которых отсутствуют в таблице book.

INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE title NOT IN (
SELECT title FROM book
Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.

INSERT INTO book (title, author, price, amount)
SELECT title, author, price, amount
FROM supply
WHERE author NOT IN (
SELECT author FROM book);
SELECT * FROM book;
Запросы на обновление
UPDATE таблица SET поле = выражение
Уменьшить на 30% цену книг в таблице book.
UPDATE book
SET price = 0.7 *price;
SELECT * FROM book;
Уменьшить на 30% цену тех книг в таблице book, количество которых меньше 5.

UPDATE book 
SET price = 0.7 * price
WHERE amount < 5;
SELECT * FROM book;
Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10 включительно.

UPDATE book
SET price = 0.9 * price
WHERE amount BETWEEN 5 and 10;

Запросом UPDATE можно обновлять значения нескольких столбцов 
одновременно. В этом случае простейший запрос будет выглядеть так:
UPDATE таблица SET поле1 = выражение1, поле2 = выражение2
В столбце buy покупатель указывает количество книг, которые он 
хочет приобрести. Для каждой книги, выбранной 
UPDATE book
SET amount = amount - buy,
    buy = 0;
SELECT * FROM book;
В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало допустимый остаток в столбце amount. 
А цену тех книг, которые покупатель не заказывал, снизить на 10%.

Запросом UPDATE можно обновлять
 значения нескольких столбцов одновременно. 
В этом случае простейший запрос будет выглядеть так:
UPDATE таблица SET поле1=выражение1, поле2=выражение2
В столбце buy покупатель указывает количество книг,
 которые он хочет приобрести. Для каждой книги, выбранной покупателем, необходимо уменьшить ее количество на складе 
на указанное в столбцеbuy количество, а в столбец buy занести 0.

UPDATE book
SET amount = amount - buy
	buy=0;
SELECT * FROM book;

В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало допустимый остаток в столбце amount.
 А цену тех книг, которые покупатель не заказывал, снизить на 10%
UPDATE book
SET buy =  IF(buy>amount,buy-(buy-amount),buy),
    price = IF(buy=0, price*0.9, price);
SELECT * FROM book;
Если в таблице supply  есть те же книги, что и в таблице book, добавлять эти книги в таблицу book не имеет смысла. Необходимо 
увеличить их количество на значение столбца amountтаблицы supply.
UPDATE book, supply
SET book.amount = book.amount + supply.amount
WHERE book.title = supply.title and book.author=supply.author;
SELECT * FROM book;

Для тех книг в таблице book , которые есть в 
таблице supply, не только увеличить их количество в 
таблице book ( увеличить их количество на значение столбца amountтаблицы supply), но и пересчитать их цену (для каждой
 книги найти сумму цен из таблиц book и supply и разделить на 2).
DELETE FROM таблица;
Этот запрос удаляет все записи из указанной после FROM таблицы.

DELETE FROM supply;
SELECT * FROM supply
